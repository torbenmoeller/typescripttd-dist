{"version":3,"sources":["webpack:///./src/index.ts","webpack:///./styles/style.styl"],"names":[],"mappings":";;;;;;8CAAa;;;;;;AACb,IAAO,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;AAE5C,cAAc;AACd,2FAA2F;AAC3F,mBAAO,CAAC,CAAM,CAAC,CAAC,CAAI,mFAAmF;AACvG,mBAAO,CAAC,CAAI,CAAC,CAAC;AACd,mBAAO,CAAC,CAAQ,CAAC,CAAC,CAAE,oFAAoF;AAExG,uBAA2B,CAAC,mEAAmE;AAE/F,IAAO,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;AAChD,IAAO,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;AAClD,IAAO,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,CAAC;AAC1D,IAAO,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;AACpD,IAAO,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;AAC9C,IAAO,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;AAC9C,IAAO,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;AAC9C,IAAO,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;AAG9C,oCAAoC;AACpC;IAAiC,uBAAW;IAC1C,aAAY,MAA0B;QAAtC,YACE,kBAAM,MAAM,CAAC,SAkBd;QAhBC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QACxD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAC9D,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QAChD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAClD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAClD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAClD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAClD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QACpD,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;;QAEtD,sCAAsC;QACtC,qCAAqC;QACrC,+CAA+C;QAC/C,mEAAmE;QACnE,EAAE;QACF,iEAAiE;IACnE,CAAC;IACH,UAAC;AAAD,CAAC,CArBgC,MAAM,CAAC,IAAI,GAqB3C;;;AAGD,2EAA2E;AAC3E,0CAA0C;AAC1C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACnB,MAAM,CAAC,MAAM,GAAG;QACd,IAAM,MAAM,GAAuB;YACjC,KAAK,EAAY,GAAG;YACpB,MAAM,EAAW,GAAG;YACpB,QAAQ,EAAS,MAAM,CAAC,IAAI;YAC5B,MAAM,EAAW,EAAE;YACnB,UAAU,EAAO,CAAC;YAClB,eAAe,EAAE,KAAK,CAAC,gFAAgF;SACxG,CAAC;QAEF,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,oFAAoF;IACvG,CAAC,CAAC;AACJ,CAAC;;;;;;;;;AC7DD,yC","file":"js/main.js","sourcesContent":["'use strict';\r\nimport GameScreen = TypeScriptTD.GameScreen;\r\n\r\n/** Imports */\r\n// Import global dependencies. (I remind you, webpack create separate chunk file for them).\r\nrequire('pixi');    // Because Phaser use PIXI and p2 as global variables, they must be imported first.\r\nrequire('p2');\r\nrequire('phaser');  // So, in my case, TypeScript breaks if i import it as `import 'phaser';`. ¯\\_(ツ)_/¯\r\n\r\nimport 'styles/style.styl'; // Registering styles for the page; They will automatically inject.\r\n\r\nimport DefeatScreen = TypeScriptTD.DefeatScreen;\r\nimport VictoryScreen = TypeScriptTD.VictoryScreen;\r\nimport LevelSelectScreen = TypeScriptTD.LevelSelectScreen;\r\nimport MainMenuScreen = TypeScriptTD.MainMenuScreen;\r\nimport HelpScreen2 = TypeScriptTD.HelpScreen2;\r\nimport HelpScreen1 = TypeScriptTD.HelpScreen1;\r\nimport HelpScreen4 = TypeScriptTD.HelpScreen4;\r\nimport HelpScreen3 = TypeScriptTD.HelpScreen3;\r\n\r\n\r\n// The main class of our application\r\nexport default class App extends Phaser.Game {\r\n  constructor(config: Phaser.IGameConfig) {\r\n    super(config);\r\n\r\n    this.state.add('MainMenuScreen', MainMenuScreen, false);\r\n    this.state.add('LevelSelectScreen', LevelSelectScreen, false);\r\n    this.state.add('GameScreen', GameScreen, false);\r\n    this.state.add('HelpScreen1', HelpScreen1, false);\r\n    this.state.add('HelpScreen2', HelpScreen2, false);\r\n    this.state.add('HelpScreen3', HelpScreen3, false);\r\n    this.state.add('HelpScreen4', HelpScreen4, false);\r\n    this.state.add('DefeatScreen', DefeatScreen, false);\r\n    this.state.add('VictoryScreen', VictoryScreen, false);\r\n\r\n    // this.state.start('MainMenuScreen');\r\n    // this.state.add('boot', BootState);\r\n    // this.state.add('preloader', PreloaderState);\r\n    // this.state.add('main', MainState); // Add `main` state into game\r\n    //\r\n    // this.state.start('boot'); // Initialize and start `boot` state\r\n  }\r\n}\r\n\r\n\r\n// Like python's `__name__ == \"__main__\"` checks whether the module is part\r\n// of another program or it is executable.\r\nif (!module.parent) {\r\n  window.onload = () => {\r\n    const config: Phaser.IGameConfig = {\r\n      width:           800, // width of canvas\r\n      height:          600, // height of canvas\r\n      renderer:        Phaser.AUTO, // rendering context. The recommended parameter is Phaser.AUTO\r\n      parent:          '',\r\n      resolution:      1,\r\n      forceSetTimeOut: false // tell Phaser to use `setTimeOut` even if `requestAnimationFrame` is available.\r\n    };\r\n\r\n    new App(config); // Initialize the application. It will automatically inject <canvas /> into <body />\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./styles/style.styl\n// module id = 4\n// module chunks = 2"],"sourceRoot":""}